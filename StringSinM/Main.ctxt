#BlueJ class context
comment0.target=Main
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment2.params=s\ M
comment2.target=void\ findSinMExplore(java.lang.String,\ char[][])
comment2.text=public\ static\ void\ findSinM(String\ s,\ char[][]\ M)\ {\n\ \ \ \ \ \ \ \ ArrayList<Point>\ result\ \=\ new\ ArrayList<>();\n\ \ \ \ \ \ \ \ if\ (findSinM(s,\ M,\ new\ Point(0,0),0,\ result))\ {\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("answer\ \=\ yes\\norigin\ \=\ "\ \ +\ "("\ +\ (int)result.get(0).getX()\ +\ ",\ "\ +\ (int)result.get(0).getY()\ +\ ")\ ");\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.print("Coordinates\ \=\ [");\n\ \ \ \ \ \ \ \ \ \ \ \ for\ (Point\ p\ \:\ result)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ System.out.print("("\ +\ (int)\ p.getX()\ +\ ",\ "\ +\ (int)\ p.getY()\ +\ ")\ ");\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.print("]");\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ else\n\ \ \ \ \ \ \ \ \ \ \ \ System.out.println("answer\ \=\ no");\n\ \ \ \ }\n\ \ \ \ //\ finds\ String\ s\ in\ char\ array\ M\n\ \ \ \ public\ static\ boolean\ findSinM(String\ s,\ char[][]\ M,\ Point\ pos,\ int\ count,\ ArrayList<Point>\ result)\ {\n\ \ \ \ \ \ \ \ //\ sets\ row\ and\ col\n\ \ \ \ \ \ \ \ int\ r\ \=\ (int)pos.getY();\n\ \ \ \ \ \ \ \ int\ c\ \=\ (int)pos.getX();\n\n\ \ \ \ \ \ \ \ //\ check\ to\ see\ for\ row\ adjustment\n\ \ \ \ \ \ \ \ if\ (c\ \=\=\ M[0].length)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ c\ \=\ 0;\n\ \ \ \ \ \ \ \ \ \ \ \ r++;\n\ \ \ \ \ \ \ \ \ \ \ \ pos.setLocation(c,\ r);\n\ \ \ \ \ \ \ \ }\n\n\ \ \ \ \ \ \ \ //\ if\ reached\ end\n\ \ \ \ \ \ \ \ if\ (r\ \=\=\ M.length)\n\ \ \ \ \ \ \ \ \ \ \ \ return\ false;\n\n\ \ \ \ \ \ \ \ //\ if\ pos\ \=\ next\ char\n\ \ \ \ \ \ \ \ if\ (M[r][c]\ \=\=\ s.charAt(count))\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ add\ result\ and\ update\ count\n\ \ \ \ \ \ \ \ \ \ \ \ result.add(new\ Point(r,c));\n\ \ \ \ \ \ \ \ \ \ \ \ count++;\n\n\ \ \ \ \ \ \ \ \ \ \ \ //\ update\ pos\n\ \ \ \ \ \ \ \ \ \ \ \ pos.translate(1,0);\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (pos.getX()\ \=\=\ M[0].length)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ pos.setLocation(0,\ pos.getY()+1);\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ //\ else\ if\ needs\ reset\n\ \ \ \ \ \ \ \ else\ if\ (count\ \!\=\ 0)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ //\ reset\ count\ and\ clear\ result\n\ \ \ \ \ \ \ \ \ \ \ \ count\ \=\ 0;\n\ \ \ \ \ \ \ \ \ \ \ \ result.clear();\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ //\ else\ if\ does\ not\ need\ reset\n\ \ \ \ \ \ \ \ else\ if\ (count\ \=\=\ 0)\n\ \ \ \ \ \ \ \ \ \ \ \ pos.translate(1,0);\n\n\ \ \ \ \ \ \ \ //\ if\ complete\ return\ result\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (count\ \=\=\ s.length())\n\ \ \ \ \ \ \ \ \ \ \ \ return\ true;\n\n\ \ \ \ \ \ \ \ //\ go\ to\ next\ pos\n\ \ \ \ \ \ \ \ return\ findSinM(s,\ M,\ pos,\ count,\ result);\n}
comment3.params=s\ M\ pos\ count\ result
comment3.target=boolean\ findSinMExplore(java.lang.String,\ char[][],\ java.awt.Point,\ int,\ java.util.ArrayList)
numComments=4
